<!--
Author: Phil
创建日期:2016/4/12
描述:本文件用于Maven的配置
注意:不同的操作系统在本文的<bootclasspath></bootclasspath>节点需要更换相应配置,详见此节点处注释
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.techviewinfo</groupId>
    <artifactId>tviframework-mvc</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>tviframework Maven Webapp</name>
    <url>http://www.techviewinfo.com</url>
    <properties>
        <!--版本号 Start-->
        <spring-version>3.2.16.RELEASE</spring-version>
        <javax-inject-version>1</javax-inject-version>
        <servlet-api-version>2.5</servlet-api-version>
        <jsp-api-version>2.1</jsp-api-version>
        <jstl-version>1.2</jstl-version>
        <junit-version>3.8</junit-version>
        <cas-client-core-version>3.3.3</cas-client-core-version>
        <xmlsec-version>1.3.0</xmlsec-version>
        <!--版本号 End-->
    </properties>
    <profiles>
        <!--多环境编译参数设置. Start
        说明: 选择不同的编译参数(各profile下id的值),将会编译出相应的版本.
        指令:
            $ mvn dev       编译本地开发环境
            $ mvn test      编译测试环境
            $ mvn product   编译生产环境-->

        <!--本地开发环境-->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profiles.active>dev</profiles.active>
            </properties>
        </profile>

        <!--测试环境-->
        <profile>
            <id>test</id>
            <properties>
                <profiles.active>test</profiles.active>
            </properties>
        </profile>

         <!--生产环境-->
        <profile>
            <id>product</id>
            <properties>
                <profiles.active>product</profiles.active>
            </properties>
        </profile>

        <!--多环境编译参数设置. End-->
    </profiles>
    <build>
        <finalName>tviframework-mvc</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>1.7</source>
                    <target>1.7</target>
                    <compilerArguments>
                        <!--指定JRE路径. 如不指定在某些场景下会出错. Windows与Linux的区别在于路径之间的分隔符不同,windows为分号,Linux为冒号-->
                        <!-- Windows -->
                        <!-- <bootclasspath>${java.home}/lib/rt.jar;${java.home}/lib/jce.jar</bootclasspath> -->
                        <!-- Linux/OS X -->
                        <bootclasspath>${java.home}/lib/rt.jar:${java.home}/lib/jce.jar</bootclasspath>
                    </compilerArguments>
                </configuration>
            </plugin>
            <!--<plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <warSourceDirectory>web</warSourceDirectory>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <webResources>
                        <resource>
                            &lt;!&ndash;各环境的私有文件,编译时会用此处的文件替换下面<targetPath>中指定的文件&ndash;&gt;
                            <directory>resources/conf/${profiles.active}</directory>
                            &lt;!&ndash;被替换的文件&ndash;&gt;
                            <targetPath>WEB-INF/classes/conf</targetPath>
                        </resource>
                    </webResources>
                    &lt;!&ndash;被过滤的文件,即编译时不输出的文件&ndash;&gt;
                    <packagingIncludes>
                        WEB-INF/classes/conf/dev/**,
                        WEB-INF/classes/conf/prod-hc/**,
                        WEB-INF/classes/conf/prod-ax/**,
                        WEB-INF/classes/conf/prod-geasy/**
                    </packagingIncludes>
                </configuration>
            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <!--Spring-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!-- @Inject -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax-inject-version}</version>
        </dependency>

        <!-- Servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet-api-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp-api-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl-version}</version>
        </dependency>

        <!--Junit-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit-version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>xml-security</groupId>
            <artifactId>xmlsec</artifactId>
            <version>${xmlsec-version}</version>
        </dependency>

        <!--Logger-->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.7</version>
        </dependency>
        <dependency>
            <groupId>org.logback-extensions</groupId>
            <artifactId>logback-ext-spring</artifactId>
            <version>0.1.4</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.12</version>
        </dependency>

        <!-- cas client -->
        <dependency>
            <groupId>org.jasig.cas.client</groupId>
            <artifactId>cas-client-core</artifactId>
            <version>${cas-client-core-version}</version>
        </dependency>
    </dependencies>
</project>
